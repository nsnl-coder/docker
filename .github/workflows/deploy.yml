name: Deploy MultiK8s
on:
  push:
    branches:
      - k8s-app

env:
  SHA: $(git rev-parse HEAD)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t nsnhatlong/client -f ./client/Dockerfile.dev ./client
          docker run nsnhatlong/client npm test run

      - name: Set Service Key
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set Project
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: multi-k8s-375814

      - name: Auth
        run: |-
          gcloud --quiet auth configure-docker

      - name: Get Credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: multi-cluster
          location: us-central1-c

      - name: Build
        run: |-
          docker build -t nsnhatlong/client:latest -t nsnhatlong/client:${{ env.SHA }} -f ./client/Dockerfile ./client
          docker build -t nsnhatlong/api:latest -t nsnhatlong/api:${{ env.SHA }} -f ./api/Dockerfile ./api
          docker build -t nsnhatlong/worker:latest -t nsnhatlong/worker:${{ env.SHA }} -f ./worker/Dockerfile ./worker

      - name: Push
        run: |-
          docker push nsnhatlong/client:${{ env.SHA }}
          docker push nsnhatlong/api:${{ env.SHA }}
          docker push nsnhatlong/worker:${{ env.SHA }}
          docker push nsnhatlong/client:latest
          docker push nsnhatlong/api:latest
          docker push nsnhatlong/worker:latest

      - name: set pg password
        run: kubectl create secret generic pgpassword --from-literal PGPASSWORD={{ secrets.PG_PASSWORD }}
      - name: Apply
        # client= , worker=, server= are container name in deployment object
        run: |-
          kubectl set image deployments/client-deployment client=nsnhatlong/client:${{ env.SHA }} 
          kubectl set image deployments/client-deployment client=nsnhatlong/client:${{ env.SHA }} 
          kubectl set image deployments/worker-deployment worker=nsnhatlong/worker:${{ env.SHA }}
          kubectl set image deployments/server-deployment server=nsnhatlong/api:${{ env.SHA }}
